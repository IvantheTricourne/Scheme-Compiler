(library (Compiler expose-memory-operands)
  (export expose-memory-operands)
  (import (chezscheme) (Framework match) (Framework helpers))
  (define-who (expose-memory-operands x)
    (define (expose-memory exp)
      (match exp
        ((begin ,eff* ... ,end)
         (make-begin `(,(map expose-memory eff*) ... ,(expose-memory end))))
        ((mset! ,base ,off ,exp)
         (if (and (register? base) (register? off)) `(set! ,(make-index-opnd base off) ,exp)
             `(set! ,(make-disp-opnd base off) ,exp)))
        ((set! ,reg (mref ,base ,off))
         (if (and (register? base) (register? off)) `(set! ,reg ,(make-index-opnd base off))
             `(set! ,reg ,(make-disp-opnd base off))))
        (,x (guard (list? x)) (map expose-memory x))
        (,x x)))
    (map expose-memory x)))
