(library (Compiler compile)
  (export p423-compile p423-step)
  (import
    (chezscheme)
    (Framework driver)
    (Framework wrappers)
    (Framework match)
    (Framework helpers)
    (Compiler parse-scheme)
    (Compiler convert-complex-datum)
    (Compiler uncover-assigned)
    (Compiler purify-letrec)
    (Compiler convert-assignments)
    (Compiler optimize-direct-call)
    (Compiler remove-anonymous-lambda)
    (Compiler sanitize-binding-forms)
    (Compiler uncover-free)
    (Compiler convert-closures)
    (Compiler optimize-known-call)
    (Compiler introduce-procedure-primitives)
    ;; (Compiler optimize-source)
    (Compiler lift-letrec)
    (Compiler normalize-context)
    (Compiler specify-representation)
    (Compiler uncover-locals)
    (Compiler remove-let)
    (Compiler verify-uil)
    (Compiler remove-complex-opera*)
    (Compiler flatten-set!)
    (Compiler impose-calling-conventions)
    (Compiler expose-allocation-pointer)
    (Compiler uncover-frame-conflict)
    (Compiler pre-assign-frame)
    (Compiler assign-new-frame)
    (Compiler select-instructions)
    (Compiler uncover-register-conflict)
    (Compiler assign-registers)
    (Compiler everybody-home?)
    (Compiler assign-frame)
    (Compiler finalize-frame-locations)
    (Compiler discard-call-live)
    (Compiler finalize-locations)
    (Compiler expose-frame-var)
    (Compiler expose-memory-operands)
    (Compiler expose-basic-blocks)
    (Compiler optimize-jumps)
    (Compiler flatten-program)
    (Compiler generate-x86-64))

  (define (assemble thunk)
    (with-output-to-file "t.s"
      thunk 
      'replace)
    (unless (zero? (system "cc -m64 -o t t.s Framework/runtime.c"))
      (error 'assemble "assembly failed"))
    "./t")

  (define-compiler (p423-compile p423-step pass->wrapper)
    (parse-scheme)
    (convert-complex-datum)
    (uncover-assigned)
    (purify-letrec)
    (convert-assignments)
    (optimize-direct-call)
    (remove-anonymous-lambda)
    (sanitize-binding-forms)
    (uncover-free)
    (convert-closures)
    (optimize-known-call)
    (introduce-procedure-primitives)
    ;; (optimize-source)
    (lift-letrec)
    (normalize-context)
    (specify-representation)
    (uncover-locals)
    (remove-let)
    (verify-uil)
    (remove-complex-opera*)
    (flatten-set!)
    (impose-calling-conventions)
    (expose-allocation-pointer)
    (uncover-frame-conflict)
    (pre-assign-frame)
    (assign-new-frame)
    (iterate
     (finalize-frame-locations)
     (select-instructions)
     (uncover-register-conflict)
     (assign-registers)
     (break/when everybody-home?)
     (assign-frame))
    (discard-call-live)
    (finalize-locations)
    (expose-frame-var)
    (expose-memory-operands)
    (expose-basic-blocks)
    (optimize-jumps)
    (flatten-program)
    (generate-x86-64 assemble)
    )
  )
